# Learn detailed information about the fields of an extension.yaml file in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml

name: functions-auto-stop-billing
version: 1.2.0
specVersion: v1beta # Version of the Firebase Extensions specification

# Friendly display name for your extension (~3-5 words)
displayName: Auto Stop Services

# Brief description of the task your extension performs (~1 sentence)
description: >-
  Stops cost overruns by disabling Firebase services when a billing threshold has been reached.

author:
  authorName: Kurt Weston
  url: https://github.com/deep-rock-development

icon: icon.png
tags: [utilities, billing, budget, cost, stop, cease, disable, shutdown]

license: Apache-2.0 # https://spdx.org/licenses/

# Public URL for the source code of your extension.
sourceUrl: https://github.com/deep-rock-development/auto-stop-firebase-ext
releaseNotesUrl: https://github.com/deep-rock-development/auto-stop-firebase-ext/blob/main/CHANGELOG.md

# Specify whether a paid-tier billing plan is required to use your extension.
billingRequired: true

# In an `apis` field, list any Google APIs (like Cloud Translation, BigQuery, etc.)
# https://firebase.google.com/docs/extensions/reference/extension-yaml#apis-field
# Also see available roles at: https://firebase.google.com/docs/extensions/publishers/access
apis:
  - apiName: cloudbilling.googleapis.com
    reason: Needed to manage budget and receive budget alerts.
  - apiName: pubsub.googleapis.com
    reason: Required for creating and managing pub/sub topics.
  - apiName: cloudfunctions.googleapis.com
    reason: Necessary to deploy and execute functions that respond to budget alerts.
  - apiName: billingbudgets.googleapis.com
    reason: Necessary to create and manage budgets.
  - apiName: serviceusage.googleapis.com
    reason: Necessary to disable services in response to budget alerts reached.

# In a `roles` field, list any IAM access roles required for your extension to operate.
roles:
  - role: pubsub.editor
    reason: Create the topic that receives the budget alerts
  - role: pubsub.publisher
    reason: Publish to the topics to trigger alerts
  - role: pubsub.subscriber
    reason: Subscribe to a topic to receive budget alerts
  - role: monitoring.viewer
    reason: Used to monitor Firestore usage

# In the `resources` field, list each of your extension's functions, including the trigger for each function.
resources:
  - name: onInstallExtension
    type: firebaseextensions.v1beta.function
    description: >-
      Creates the resources necessary for the extension to operate.
    properties:
      runtime: nodejs20
      location: ${LOCATION}
      taskQueueTrigger: {}
  - name: stopTriggered
    type: firebaseextensions.v1beta.function
    description: >-
      Stops services in response to a pub/sub message from a budget alert.
    properties:
      runtime: nodejs20
      location: ${LOCATION}
      eventTrigger:
        eventType: google.pubsub.topic.publish
        resource: projects/${PROJECT_ID}/topics/${TOPIC_NAME}
  - name: monitoring
    type: firebaseextensions.v1beta.function
    description: >-
      Monitors Firestore usage directly, and executes the stopping strategy if the budget threshold is exceeded.
    properties:
      runtime: nodejs20
      location: ${LOCATION}
      scheduleTrigger:
        schedule: ${MONITORING_SCHEDULE}

# In the `params` field, set up your extension's user-configured parameters.
params:
  - param: TOPIC_NAME
    label: Topic Name
    description: The name of the Pub/Sub topic to subscribe to for triggering the stopTriggered function.
    type: string
    default: ext-firebase-trigger-auto-stop
    required: true
  - param: BUDGET_STOP_THRESHOLD_PERCENT
    label: Budget Stop Threshold
    description: The percent threshold (between 0.0 and 1.0) of your budget that will trigger the shutdown notification. Defaults to 1.0 (100%).
    type: string
    default: 1.0
    required: true
  - param: DISABLE_BILLING
    label: Disable Billing (Strategy 1)
    description: "Strategy 1: Removes the billing account from the project, stopping services from accruing costs. If Yes is selected, when the budget threshold is reached the Billing Account is removed from the project. This is the recommended strategy."
    type: select
    options:
      - label: Yes
        value: true
      - label: No
        value: false
    default: true
    required: true
  - param: DISABLE_API_LIST
    label: APIs to Disable (Strategy 2)
    description: "Strategy 2: Select services to be disabled when the budget is reached. If services are selected, when a budget threshold is reached these will be deactivated. If none are selected this strategy is not used. Note that this strategy is only recommended for advanced users."
    type: multiSelect
    options:
      - label: Firebase Storage
        value: firebasestorage.googleapis.com
      - label: Cloud Functions (Firebase Functions)
        value: cloudfunctions.googleapis.com
      - label: Firestore
        value: firestore.googleapis.com
      - label: Firebase Hosting
        value: firebasehosting.googleapis.com
      - label: Firebase Realtime Database
        value: firebasedatabase.googleapis.com
      - label: Firebase ML
        value: firebaseml.googleapis.com
      - label: Firebase ML Kit
        value: mlkit.googleapis.com
      - label: Firebase Vertex AI
        value: firebasevertexai.googleapis.com
      - label: Google Speech-to-Text
        value: speech.googleapis.com
      - label: Firebase Cloud Messaging
        value: fcm.googleapis.com
      - label: Firebase Authentication
        value: identitytoolkit.googleapis.com
      - label: Firebase Extensions
        value: firebaseextensions.googleapis.com
      - label: Pub/Sub
        value: pubsub.googleapis.com
      - label: Compute
        value: compute.googleapis.com
      - label: Storage
        value: storage.googleapis.com
    required: false
  - param: LOCATION
    label: Cloud Functions Location
    description: The location where the Cloud Functions will be deployed.
    type: select
    required: true
    default: us-central1
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: London (europe-west2)
        value: europe-west2
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
      - label: SÃ£o Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Oregon (us-west1)
        value: us-west1
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
  - param: MONITORING_ENABLED
    label: Enable periodic monitoring
    description: Use the Cloud Monitoring API to periodically check Firestore, Firebase Hosting, Google Cloud Storage buckets (including Firebase Storage) and Cloud Run (including Firebase Cloud Functions gen 2) to catch overages early.
    type: select
    options:
      - label: Yes
        value: true
      - label: No
        value: false
      - label: Test (logging only)
        value: test
    default: true
    required: true
  - param: MONITORING_SCHEDULE
    label: How often to monitor Firestore/Hosting usage
    description: How often do you want to monitor the usage? More frequent checks mean quicker responses to overages, but will cause the monitoring function to run more often. If you're not planning to use the monitoring feature, set this to NEVER to avoid unnecessary function invocations.
    type: select
    options:
      - label: NEVER (Disable Monitoring)
        value: every 10 years
      - label: every 4 minutes (recommended)
        value: every 4 minutes
      - label: every 10 minutes
        value: every 10 minutes
      - label: every 15 minutes
        value: every 15 minutes
      - label: every 20 minutes
        value: every 20 minutes
      - label: every 25 minutes
        value: every 25 minutes
      - label: every 30 minutes
        value: every 30 minutes
      - label: every 45 minutes
        value: every 45 minutes
      - label: every 60 minutes
        value: every 60 minutes
    default: every 4 minutes
    required: true
  - param: MONITOR_BUDGET_ID
    label: GCP Budget ID for Firestore/Hosting Monitoring (Required if Monitoring is enabled)
    description: The ID for an existing GCP budget. You can use the same budget as the one which dispatches the Pub/Sub alert, or create a new budget specifically for monitoring Firestore/Hosting usage. The budget must be created in the GCP Console. The budget must be in USD. You can find the ID in the budget's details page in the GCP Console. The extension will trigger when the monitoring function sees usage this month which correspond to a spend of more than 100% of the budget amount.
    type: string
    required: false
  - param: FIRESTORE_FREE_TIER_DATABASE_NAME
    label: Name of Firestore database with free tier
    description: Only the first Firestore database in a project gets the free quota. Specify the name of your first Firestore database here to include the free quota in the cost calculations. In most cases the name will be "(default)".
    type: string
    required: false
    default: (default)
  - param: MONITOR_FIRESTORE_STD_READ_COST
    label: Firestore (Std) Read cost in USD (per 1 000 000 reads)
    description: The cost of 1 000 000 Firestore Standard Edition document reads in USD. This is used to estimate your Firestore costs when monitoring usage directly. Defaults to 0.30 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.30
    required: false
  - param: MONITOR_FIRESTORE_STD_WRITE_COST
    label: Firestore (Std) Write cost in USD (per 1 000 000 writes)
    description: The cost of 1 000 000 Firestore Standard Edition document writes in USD. This is used to estimate your Firestore costs when monitoring usage directly. Defaults to 0.90 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.90
    required: false
  - param: MONITOR_FIRESTORE_STD_DELETE_COST
    label: Firestore (Std) Delete cost in USD (per 1 000 000 deletes)
    description: The cost of 1 000 000 Firestore Standard Edition document deletes in USD. This is used to estimate your Firestore costs when monitoring usage directly. Defaults to 0.10 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.10
    required: false
  - param: MONITOR_FIRESTORE_ENT_READ_UNIT_COST
    label: Firestore (Ent) Read Unit cost in USD (per 1 000 000 units)
    description: The cost of 1 000 000 Firestore Enterprise Edition Read Units in USD. This is used to estimate your Firestore costs when monitoring usage directly. Defaults to 0.05 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.05
    required: false
  - param: MONITOR_FIRESTORE_ENT_WRITE_UNIT_COST
    label: Firestore (Ent) Write Unit cost in USD (per 1 000 000 deletes)
    description: The cost of 1 000 000 Firestore Enterprise Edition Write Units in USD. This is used to estimate your Firestore costs when monitoring usage directly. Defaults to 0.26 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.26
    required: false
  - param: MONITOR_HOSTING_BANDWIDTH_COST
    label: Hosting Bandwidth Cost in USD (per GB)
    description: The cost of 1 GB of Firebase Hosting bandwidth in USD. This is used to estimate your Hosting costs when monitoring usage directly. Defaults to 0.15 USD which is the price as of publishing.
    type: string
    default: 0.15
    required: false
  - param: MONITOR_STORAGE_BANDWIDTH_COST
    label: Cloud Storage Bandwidth Cost in USD (per GB)
    description: The cost of 1 GB of Google Cloud Storage bandwidth in USD. This is used to estimate your Storage costs when monitoring usage directly. Defaults to 0.12 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.12
    required: false
  - param: MONITOR_CLOUD_FUNCTIONS_CPU_SECOND_COST
    label: Cloud Function (gen 2) CPU Cost in USD (per vCPU second)
    description: The cost of 1 vCPU second of Cloud Run CPU time in USD. This is used to estimate your Cloud Functions gen 2 costs when monitoring usage directly. Defaults to 0.000024 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.000024
    required: false
  - param: MONITOR_CLOUD_FUNCTIONS_MEMORY_GB_SECOND_COST
    label: Cloud Function (gen 2) Memory Cost in USD (per GB second)
    description: The cost of 1 GB second of Cloud Run memory time in USD. This is used to estimate your Cloud Functions gen 2 costs when monitoring usage directly. Defaults to 0.0000025 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.0000025
    required: false
  - param: MONITOR_CLOUD_FUNCTIONS_EGRESS_BANDWIDTH_COST
    label: Cloud Function (gen 2) Egress Bandwidth Cost in USD (per GB)
    description: The cost of 1 GB of Cloud Functions gen 2 egress bandwidth in USD. This is used to estimate your Cloud Functions gen 2 costs when monitoring usage directly. Defaults to 0.12 USD which is the price in us-central1 as of publishing.
    type: string
    default: 0.12
    required: false
  - param: MONITOR_CLOUD_FUNCTIONS_REQUEST_COST
    label: Cloud Function (gen 2) Request Cost in USD (per 1 000 000 requests)
    description: The cost of 1 000 000 Cloud Functions gen 2 requests in USD. This is used to estimate your Cloud Functions gen 2 costs when monitoring usage directly. Defaults to 0.40 USD which is the price as of publishing.
    type: string
    default: 0.40
    required: false


lifecycleEvents:
  onInstall:
    function: onInstallExtension
    processingMessage: Creating extension resources
  onUpdate:
    function: onInstallExtension
    processingMessage: Update extension resources
